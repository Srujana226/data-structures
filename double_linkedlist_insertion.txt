#include<stdio.h>
#include<stdlib.h>
struct node
{
        struct node *prev_link;
        int data;
        struct node *next_link;
};
struct node* insert_last(struct node *head);
struct node* insert_random(struct node *head);
struct node* insert_begin(struct node *head);
void display(struct node *head);
int main()
{
        struct node *head = (struct node*)malloc(sizeof(struct node));
        head->prev_link = NULL;
        head->data = 10;
        head->next_link = NULL;
        struct node *current = (struct node*)malloc(sizeof(struct node));
        current->prev_link=NULL;
        current->data = 20;
        current->next_link=NULL;
        head->next_link=current;
        current->prev_link=head;
        current = (struct node*)malloc(sizeof(struct node));
        current->prev_link = NULL;
        current->data = 30;
        current->next_link = NULL;
        head->next_link->next_link = current;
        current->prev_link = head;
        current = (struct node*)malloc(sizeof(struct node));
        current->prev_link = NULL;
        current->data = 40;
        current->next_link = NULL;
        head->next_link->next_link->next_link= current;
        current->prev_link = head;
        printf("double linked list = ");
        display(head);
	    printf("\nafter insertion at begin = ");
	    head = insert_begin(head);
	    display(head);
	    printf("\nafter insertion at random = ");
	    head = insert_random(head);
	    display(head);
	    printf("\nafter insertion at last = ");
	    head = insert_last(head);
	    display(head);
}
void display(struct node *head)
{
        struct node *temp = head;
        while(temp!=NULL)
        {
                printf("%d<=>",temp->data);
                temp=temp->next_link;
                }
 }
 struct node* insert_begin(struct node *head)
{
    struct node *new=malloc(sizeof(struct node));
    new->data=50;
    new->prev_link=NULL;
    new->next_link=NULL;
    
    new->next_link=head;
    head->prev_link=new;
    head=new;
    return head;
}
struct node* insert_random(struct node *head)
{
    struct node *new=malloc(sizeof(struct node));
    struct node *temp=head;
    struct node *temp2=NULL;
    new->data=60;
    new->prev_link=NULL;
    new->next_link=NULL;
    
    int pos=3;
    pos--;
    while(pos!=1)
    {
        temp=temp->next_link;
        pos--;
    }
    temp2=temp->next_link;
    temp->next_link=new;
    temp->prev_link=new;
    new->prev_link=temp;
    new->next_link=temp2;
    
    return head;
}
struct node* insert_last(struct node *head)
{
    struct node *new=malloc(sizeof(struct node));
    struct node *temp=head;
    new->data=70;
    new->prev_link=NULL;
    new->next_link=NULL;
    
    while(temp->next_link!=NULL)
    {
        temp=temp->next_link;
    }
    new->prev_link=temp;
    temp->next_link=new;
    return head;
}